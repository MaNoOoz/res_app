import 'package:flutter/material.dart';import 'package:flutter/foundation.dart' show kIsWeb; // Import for kIsWebimport 'package:get/get.dart'; // Assuming you use GetXimport 'package:get_storage/get_storage.dart';import 'package:quiz_project/utils/Constants.dart';import 'dart:html' as html;import 'core/app_core.dart';import 'data/sources/remote/api_service.dart';import 'home/home_view.dart'; // Only import if kIsWeb is true for web-specific functionalityvoid main() async {  WidgetsFlutterBinding.ensureInitialized();  await GetStorage.init();  Get.put(ApiService());  String? initialClientId;  if (kIsWeb) {    final location = html.window.location;    final fragment = location.hash;    if (fragment.isNotEmpty) {      // Parse fragment as query parameters      final fragmentUri = Uri(query: fragment.replaceFirst('#', ''));      initialClientId = fragmentUri.queryParameters['client_id'];    }    print('Initial Client ID from URL (parsed from fragment): $initialClientId'); // Check this output now!  } else {    // Add logic for mobile/desktop if you plan to get client_id from somewhere else    // For now, it will be null on non-web platforms if not explicitly set.  }  await AppConfig.instance.loadConfig(initialClientId: initialClientId);  Get.put(MenuController());  // Get.put(ResMenuController()); // Assuming ResMenuController is also used.  runApp(const MyApp());}class MyApp extends StatelessWidget {  const MyApp({super.key});  @override  Widget build(BuildContext context) {    return GetMaterialApp(      title: AppConfig.instance.clientSettings.cafeRestaurantName,      // اسم المطعم من إعدادات العميل      debugShowCheckedModeBanner: false,      theme: ThemeData(        colorScheme: ColorScheme.fromSeed(          seedColor: AppConfig.instance.themingSettings.primaryColor,          primary: AppConfig.instance.themingSettings.primaryColor,          secondary: AppConfig.instance.themingSettings.accentColor,          background: AppConfig.instance.themingSettings.backgroundColor,        ),        fontFamily: APP_FONT_FAMILY,        useMaterial3: true,      ),      locale: const Locale('ar'),      fallbackLocale: const Locale('en', 'US'),      home:  HomePage(),    );  }}